#!/bin/sh

# New-look `bouncer', adapted to use the `telnet loads.mono.org' output.

# A few user options for friendliness. -screen will start the client within
# `screen'; -ssh will use ssh instead of telnet for the connection itself.
# -nopty will use ssh in a way that avoids allocating a pseudo-terminal.
# In addition, you can override the automatic machine selection by picking
# your own on the command line.
SCREEN=
MACH=
CONNECT='exec telnet -l mono'
unset CEND
stty quit undef
while [ $# -gt 0 ]; do
  case "$1" in
    -screen) SCREEN='screen -ln';;
    -ssh) CONNECT='exec ssh -C -x -e none -l mono';;
    -nopty) CONNECT='stty -isig -icanon -echo; cat | ssh -C -x -e none -l mono';
            CEND='; stty isig icanon echo'; unset exec ;;
    -*) echo "Unknown option $1" ;;
    *) MACH=$1;;
  esac
  shift
done

# Check if a machine is supplied
case "$MACH" in
  '' ) ;;
  *) MACHINE=`echo $MACH | sed -e 's/\.mono\.org$//; s/\([a-z]\)$/\1.mono.org/'`
     echo "Machine $MACHINE supplied on command line." ;;
esac

if [ "$MACHINE" = "" ]; then
  echo "Retrieving machine list..."
  tmpfile=/tmp/bouncer.$$.`date +%Y%m%d%H%M%S`
  telnet loads.mono.org > $tmpfile 2>&1
  MACHINE=`awk 'BEGIN {l=-2} /^HOSTS$/ { l=NR } NR==l+1 && NF==2 { print $1 }' $tmpfile`
  if test -n "$MACHINE"; then
    echo "Lowest-loaded machine is $MACHINE."
  else
    echo "Unable to get a machine name."
    MACHINE=NOLOGIN
  fi
fi

if [ $MACHINE != NOLOGIN ]
then
  rm -f $tmpfile
  echo "Connecting to $MACHINE."
  $SCREEN sh -c "echo -ne '\033[?7l'; $CONNECT $MACHINE $CEND"
  echo -ne '\033[?7h'
else
  echo "Cannot currently get a machine name. This may be due to downtime,"
  echo "or a bug in the bouncer script, or confusion."
  if [ "$VERBOSE" = "yes" ]; then
    echo ""
    echo "The output from 'telnet loads.mono.org' was as follows:"
    cat $tmpfile
  fi
  rm -f $tmpfile
fi
