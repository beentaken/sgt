#!/usr/bin/env python

import ljproto
import sys
import string
import urllib
import os
import time

verbose = force = 0
args = sys.argv[1:]
while len(args) > 0:
    arg = args[0]
    args = args[1:]
    if arg == "-v":
	verbose = 1
    elif arg == "--force":
	force = 1
    else:
	sys.stderr.write("ljpoll: unknown option \"" + arg + "\"\n")

def chomp(s):
    while s[-1:] == "\n" or s[-1:] == "\r":
	s = s[:-1]
    return s

cfg = os.environ["HOME"] + "/.ljscan/ljpoll"
date_start = date_stop = ""
lastupdate = ""
lastrealdate = ""
then = 0
try:
    f = open(cfg, "r")
    while 1:
	s = chomp(f.readline())
	if s == "": break
	space = string.find(s, " ")
	if space < 0: continue
	if s[:space] == "date-start":
	    date_start = s[space+1:]
	elif s[:space] == "date-stop":
	    date_stop = s[space+1:]
	elif s[:space] == "checkfriends-last-return":
	    lastupdate = s[space+1:]
	elif s[:space] == "last-real-date":
	    lastrealdate = s[space+1:]
	elif s[:space] == "last-call":
	    then = float(s[space+1:])
    f.close()
    now = time.time()
    if now < then and not force:
	sys.stderr.write("LJ polling discouraged for " +
	"%d seconds (until %s).\n" % \
	(int(then-now), time.strftime("%H:%M:%S", time.localtime(then))))
	sys.exit(0)
except IOError:
    lastupdate = ""

dict = {"mode":"checkfriends", "lastupdate":lastupdate}
if verbose:
    print "Input:", dict
ret = ljproto.ljcall(dict)
if verbose:
    print "Output:", ret

if ljproto.ljok(ret):
    tryit = 0
    interval = string.atoi(ret["interval"])
    if ret["lastupdate"] == "":
	# This appears to indicate that checkfriends is bust, and
	# so we should retrieve the URL.
	nonemsg = "no visible change; checkfriends was uninformative"
	tryit = 1
	if interval <= 0 or interval > 300:
	    interval = 300 # in this case, we don't trust the interval either
	new = 1 # means we don't know if there's new stuff or not
    if ret["new"] == "1":
	# The checkfriends protocol tells us there is something
	# new. If we have date delimiters, we now check the real
	# friends page to see if it's actually correct or not.
	nonemsg = "no visible change, although checkfriends reported one"
	tryit = 1
	new = 2 # means quite likely to be new stuff, but uncertain
    if tryit:
	urlguts = "www.livejournal.com/users/"+ljproto.ljusername()+"/friends"
	if date_start != "" and date_stop != "":
	    url = "http://" + urlguts + "/"
	    session = os.environ["HOME"] + "/.ljscan/ljsession"
	    sessf = open(session, "r")
	    cookie = chomp(sessf.readline())
	    sessf.close()
	    urllib._urlopener.addheader(cookie)
	    f = urllib._urlopener.open(url)
	    date = ""
	    while 1:
		s = f.readline()
		if s == "": break
		a1 = string.find(s, date_start)
		if a1 >= 0:
		    a1 = a1 + len(date_start)
		    a2 = string.find(s, date_stop, a1)
		    if a2 > a1:
			date = s[a1:a2]
			break
	    f.close()
	    if date != "":
		if date == lastrealdate:
		    print nonemsg
		    new = 0
		else:
		    new = 3 # a _definite_ change
		    olddate = lastrealdate
		    newdate = date
	    if date != "": lastrealdate = date
	if new:
	    explain = None
	    if new == 1:
		newstr = "No information available on"
		explain = "(checkfriends was unhelpful, and retrieval of" + \
		" friends page itself failed)"
	    elif new == 2:
		newstr = "Possibly new"
		explain = "(checkfriends said so, but retrieval of friends "+ \
		"page itself failed)"
	    else:
		newstr = "New"
		explain = "([%s] -> [%s])" % (olddate, newdate)
	    print newstr, "entries at www.livejournal.com/users/" + \
	    ljproto.ljusername() + "/friends"
	    if explain != None: print explain
    f = open(cfg, "w")
    if date_start != "\n":
	f.write("date-start " + date_start + "\n") 
    if date_stop != "\n":
	f.write("date-stop " + date_stop + "\n")
    f.write("checkfriends-last-return " + ret["lastupdate"] + "\n")
    f.write("last-call " + str(time.time() + interval) + "\n")
    if lastrealdate != "":
	f.write("last-real-date " + lastrealdate + "\n")
    f.close()
else:
    sys.stderr.write(ljproto.ljerror(ret) + "\n")
    sys.exit(1)
