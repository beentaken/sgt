Summary: Be cleverer with SSH-2 flow control to improve bulk throughput
Class: semi-bug
Difficulty: tricky
Priority: medium
Content-type: text/x-html-body

<p>
(This wish applies to SSH-2; SSH-1 doesn't provide flow control above
TCP's.)

<p>As Peter Gutmann has
<a href="http://www.cs.auckland.ac.nz/~pgut001/pubs/app_sec.pdf">observed</a>,
naive implementations of the SSH-2 sliding window protocol place an arbitrary
limit on the throughput of each channel, limiting it to the product of the
window size and the round-trip time (the so-called "SSH-2 handbrake").
PuTTY is one such naive implementation (it uses a fixed channel window size
of 16k).

<p>There are various things that could be done to work around this.  In an
ideal world, PuTTY would measure the bandwidth-delay product of the link it's
running over and use that to set the window so as to fully use the available
bandwidth without completely breaking flow control.  A rather simpler approach
is possible where a connection only has (and only ever will have) one channel
running over it, since in that case PuTTY can open the window fully and leave
flow control to TCP.  PSCP and PSFTP do this as of r7672, and get decent
download performance.

<p>As something of an aside, it might also be helpful for PuTTY to indicate
somehow to the server that it only plans to use a single channel on a
connection so that the server can open its window fully too.  Otherwise, we
only get improved download performance.

<p>
Of course, things become more complicated if multiple channels were to be used
(e.g., port-forwarding of bulk transfers, or some of the wilder excesses of
<a href="ssh2-generality.html">SSH-2 generality</a>).

<p>
Another approach: the Pittsburgh Supercomputing Center
<a href="http://www.psc.edu/networking/hpn-ssh/">suggest</a>
that basing the SSH window size on the TCP window size from the
underlying OS can help in some circumstances.

<p>
If this is done, some higher-level protocols could probably benefit
from similar adaptation -- notably SFTP, which since it was
<a href="sftp-slow.html">sped up</a> has also used a 16k "window size"
of its own for bulk transfers. We've had improvement reported from
tweaking this and the SSH-2 channel window size on a 100Mbit network
(ref <tt>41A6366F.9030909@enriva.com</tt>).
