Summary: Passwords left in memory using SSH keyboard-interactive auth
Class: vulnerability
Difficulty: fun
Priority: high
Absent-in: 0.58
Present-in: 0.59 0.60 0.61
Fixed-in: r9357 2011-12-08 0.62
Content-type: text/x-html-body

<p>
When PuTTY has sensitive data in memory and has no further need for
it, it should wipe the data out of its memory, in case malware later
gains access to the PuTTY process or the memory is swapped out to disk
or written into a crash dump file. An obvious example of this is the
password typed during SSH login; other examples include obsolete
session keys, public-key passphrases, and the private halves of public
keys.

<p>
PuTTY 0.59 to 0.61 inclusive had a bug in which they failed to wipe
from memory the replies typed by the user during
<code>keyboard-interactive</code> authentication. Since most modern
SSH-2 servers use the <code>keyboard-interactive</code> method for
password logins (rather than SSH-2's dedicated <code>password</code>
method), this meant that those versions of PuTTY would store your
login password in memory for as long as they were running.

<p>
PuTTY 0.62 fixes this bug. Keyboard-interactive responses, including
passwords, are now correctly wiped from PuTTY's memory again.

<p>
However, it is still <em>unavoidably</em> very dangerous if malicious
software is in a position to read the memory of your PuTTY processes:
there is still a lot of sensitive data in there which cannot be wiped
because it's still being used, e.g. session keys. If you're using
public-key authentication and malware can read a Pageant process,
that's even worse, because the decrypted private keys are stored in
Pageant! This fix somewhat mitigates the risks, but no fix can
eliminate them completely.
