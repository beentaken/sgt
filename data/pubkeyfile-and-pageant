Summary: Pageant + explicit keyfile gives  non-optimal behaviour
Class: bug
Difficulty: fun
Priority: medium
Present-in: 0.53b
Content-type: text/x-html-body

<p>
The behaviour of the PuTTY tools when Pageant is running and a keypair
is explicitly specified (via <code>-i</code>, configuration or whatever)
isn't ideal.

<p>
This is particularly obvious when several keys are valid for a given
connection (e.g., if one is trying to use a particular key to run
a particular forced command).  It can also cause problem if Pageant
has lots of keys and the server (e.g. OpenSSH) is configured to only
allow a certain number of authentication attempts.  See
errors-toomanyauth in the manual.

<p>
Here is my (JTN) suggested algorithm for fixing the immediate problem
(assuming that all the primitives mentioned are always available):

<p><pre>array_t pageant_ids[];

  if (Pageant is running) {
    pageant_ids := (Pageant's list of key IDs)
  } else {
    pageant_ids := {}
  }

  if (key k configured in PuTTY exists) {
    if (server would accept k.id) {
      bool success
      if (k.id in pageant_ids[]) {
        success = do_pageant_auth (k.id)
      } else {
        success = do_putty_auth (k)
      }
      if (success) goto auth_success
    }
  } else {
    foreach id in pageant_ids[] {
      if (server would accept id) {
        goto auth_success if (do_pageant_auth (id))
      }
    }
  }
  /* give up on public key auth */</pre>

<p>
An alternative and perhaps cleaner solution is to separate `public key
auth with specified file' and `public key auth with Pageant' and allow
them to be individual disabled; this ties nicely into
<a href="auth-pref.html">auth-pref</a>.

<em>FIXME: characterise any problems other than this one</em>
