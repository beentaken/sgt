#!/usr/bin/env perl

# Run a dump utility across multiple input files, and prefix every
# line of the output with the name of the appropriate input file.

# Usage:    prefix command filelist
#           prefix - command command - filelist

$usage =
  "usage: prefix <cmd> <files>\n" .
  "  e.g. prefix FIXME *.c\n" .
  "   or: prefix - <prefixple-word-cmd> - <files>\n" .
  "  e.g. prefix - objdump -d - *.o\n" .
  " also: prefix --version    report version number\n" .
  "       prefix --help       display this help text\n" .
  "       prefix --licence    display (MIT) licence text\n";

$licence =
  "prefix is copyright 1999-2004,2009 Simon Tatham.\n" .
  "\n" .
  "Permission is hereby granted, free of charge, to any person\n" .
  "obtaining a copy of this software and associated documentation files\n" .
  "(the \"Software\"), to deal in the Software without restriction,\n" .
  "including without limitation the rights to use, copy, modify, merge,\n" .
  "publish, distribute, sublicense, and/or sell copies of the Software,\n" .
  "and to permit persons to whom the Software is furnished to do so,\n" .
  "subject to the following conditions:\n" .
  "\n" .
  "The above copyright notice and this permission notice shall be\n" .
  "included in all copies or substantial portions of the Software.\n" .
  "\n" .
  "THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n" .
  "EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n" .
  "MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n" .
  "NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\n" .
  "BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n" .
  "ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n" .
  "CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n" .
  "SOFTWARE.\n";

while ($ARGV[0] =~ /^-(.+)$/) {
  shift @ARGV;
  if ($1 eq "-help") {
    print STDERR $usage;
    exit 0;
  } elsif ($1 eq "-version") {
    if ('$Revision: 4874 $' =~ /Revision:\s+(\d+)/) {
	print "prefix revision $1\n";
    } else {
	print "prefix: unknown revision\n";
    }
    exit 0;
  } elsif ($1 eq "-licence" or $1 eq "-license") {
    print $licence;
    exit 0;
  }
}

die $usage if $#ARGV < 2;

@cmd = ();
if ($ARGV[0] eq "-") {
    shift @ARGV;
    while (defined $ARGV[0] and $ARGV[0] ne "-") {
	push @cmd, shift @ARGV;
    }
    if (!defined $ARGV[0]) {
	die "prefix: no terminating - in prefixple-word command mode\n";
    }
    shift @ARGV; # eat trailing -
} else {
    $cmd[0] = shift @ARGV;
}

while (@ARGV) {
    $file = shift @ARGV;
    $cmd = &qcmd(@cmd, $file);
    open PIPE, "-|", $cmd;
    chomp, print "$file:$_\n" while <PIPE>;
    close PIPE;
}

sub qcmd {
  my (@words) = @_;
  return join " ", map { &fmt($_) } @words;
}

sub fmt {
  local ($_) = @_;
  if (/[ !"#$&'()*;<>?\\`|~]/) {
    s/'/'\\''/g;
    "'$_'";
  } else {
    $_;
  }
}
