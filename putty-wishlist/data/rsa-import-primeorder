Summary: PuTTYgen shouldn't insist that p > q in imported OpenSSH RSA private keys
Class: bug
Priority: medium
Present-in: 0.58
Fixed-in: r8202 2008-10-09
Difficulty: tricky
Content-type: text/x-html-body

<p>
OpenSSH-format RSA private keys (also known as PEM format) contain a
base64-encoded PKCS#1 RSAPrivateKey.  When generated by OpenSSL,
these always have p &gt; q, but this isn't actually required by
PKCS#1; there is a
<a href="http://groups.google.com/groups?as_umsgid=8fc94842-c68d-4d4a-a827-4480c475ac2d%408g2000hse.googlegroups.com">report</a>
that VanDyke SecureCRT generates them in a random order, for instance.
At present, PuTTYgen will reject keys where p &lt; q, but
it should accept them and make whatever changes are necessary to
have them work with PuTTY's RSA code. 

<p>
This is not <em>quite</em> trivial to do in the current PuTTY code
organisation, since the OpenSSH import code does not actually
convert the input key to bignum format; it just massages it into one
of the other private key blob formats and feeds that to an import
function in sshrsa.c. In order to reverse the order of the primes,
it would have to compute the new <code>iqmp</code> value, which
would involve a conversion to bignums and back. Still not impossible
by any means, but I'd guess more like a thirty-line job than three.
