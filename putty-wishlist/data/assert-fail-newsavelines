Summary: Failed assertion: count234(term->scrollback) <= newsavelines
Class: bug
Priority: medium
Present-in: 0.55 0.58
Content-type: text/x-html-body

<p>
We've had occasional reports of the failure of the following assertion:

<p>terminal.c:559 (0.55), :454 (0.58)
<br>count234(term-&gt;scrollback) &lt;= newsavelines

<p>
Most of the reports we've had seem to also include a CPU-intensive delay at
connection startup (possibly at other times too).

<p>
The only way we've found to reproduce this assertion failure is by configuring
a <em>negative</em> number of lines in the scrollback. If the magnitude of
the negative number is large, we see the delay at startup too.

<p>
On some platforms (including Windows), a very large <em>positive</em>
scrollback setting can end up treated as a negative one, triggering this.
This can happen for scrollback sizes of 2<sup>31</sup> (2147483648) or
greater. (You'd probably run out of physical memory before filling up
such a ridiculously large scrollback buffer!) So don't do that, then.

<p>
We should probably be robust against silly configurations like this.

<p>
(Possibly related, although we've no hard evidence for this:
<a href="assert-line-not-null.html">`assert-line-not-null'</a>.)

<ul>

<li><tt>OFA8A74C15.A4B5BE13-ON65256EF4.00210ED6-80256EF4.003C2FE1@in.ibm.com</tt>
<br>Telnet

<li><tt>2872.66.167.58.15.1094144958.squirrel@66.167.58.15</tt>
<br>0.55, "09-02-2004"; SSH

<li><tt>F0652A9934B81649B13293685D1945E90199B261@WHQNT60.AAM.NET</tt>
<br>0.58, SSH, very large scrollback setting

</ul>
