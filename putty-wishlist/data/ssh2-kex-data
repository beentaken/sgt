Summary: Data transfer during SSH2 KEX causes confusion
Class: bug
Priority: medium
Difficulty: tricky
Content-type: text/x-html-body

<p>If there is data being transferred through PuTTY while the SSH2
repeat key exchange is taking place, it can confuse some servers.
As far as I'm aware nobody has properly standardised this aspect of
the SSH2 protocol (what happens to the connection layer while the
transport layer is in a key exchange phase?) so it isn't clear what
PuTTY <em>should</em> do in this situation, but a good
conservative/liberal option would be to accept incoming
connection-layer packets provided we can decrypt them, and to queue
outgoing connection-layer packets until the key exchange is
completed. I can't easily imagine a standards decision that would
invalidate that behaviour.

<p>
There has been (repeated) discussion of this issue on
<a href="ftp://ftp.ietf.org/ietf-mail-archive/secsh/">IETF SECSH</a>:
<ul>
  <li>Thread 'Key Re-Exchange' starting 4 Apr 2001
  <li>Thread 'Some questions about "SSH Transport Layer Encryption Modes"' starting 16 Oct 2003
  <li>Thread 'data during rekey?' starting 1 Dec 2003
</ul>

<p>
The consensus seems to be drifting towards "suspending transport of
user data while rekey negotiation is in progress", and having any
nonblocking rekey as a protocol extension; but as of version -17 of
the transport draft there's no sign of this appearing in the actual
documents. People have also muttered about the receiving end
continuing to accept data encrypted using the "old" keys; presumably
some limit would want to be placed on that.

<p>
Symptoms of this:
<a href="http://www.ssh.com/products/ssh/">ssh.com</a>'s server, which
does repeat key exchange every hour or so, will sometimes throw you
off - a common disconnect message seems to be "Protocol error:
Received 94 as newkeys". (We've also had a report of "packet too long"
from F-Secure.) This will seem intermittent.

<p>
There aren't any really satisfactory workarounds - either using SSH-1
or disabling key re-exchange will both work, but have obvious
drawbacks.
