Summary: Vulnerability: crafted SFTP FXP_READDIR reply may allow remote code execution
Class: vulnerability
Difficulty: fun
Priority: high
Present-in: 0.56 2005-02-20
Fixed-in: 0.57 2005-02-21
Content-type: text/x-html-body

<p>
Many versions of PSFTP and PSCP prior to 0.57 have a heap corruption
vulnerability in their treatment of the response to the FXP_READDIR
command (enumerate entries in a directory) in the SSH File Transfer
Protocol (SFTP).

<p>
In order for this vulnerability to be exploited, the user connect to a
malicious server and issue a <code>ls</code> or <code>dir</code>
command to PSFTP, or supply the <code>-ls</code> command-line option
to PSCP.

<p>
(Note however that the vulnerability kicks in <em>after</em> host key
verification, so the host key of the server has to have been
accepted to get this far.)

<p>
SFTP is always used by PSFTP; it is also used by PSCP if available
(depending on server behaviour). It can be used in both SSH-2 and
SSH-1 (again, depending on server behaviour). Thus, a malicious server
can exploit this in all invocations of PSFTP and PSCP, unless the
<code>-scp</code> option is supplied to PSCP.

<p>
This bug was discovered by a contributor to
<a href="http://www.idefense.com/">iDEFENSE</a>'s
<a href="http://labs.idefense.com/vcp/">Vulnerability
Contributor Program</a>. Along with
<a href="vuln-sftp-string.html">`vuln-sftp-string'</a>, it is
documented in iDEFENSE's advisory
<a href="http://labs.idefense.com/intelligence/vulnerabilities/display.php?id=201">02.21.05</a>,
mentioned in Secunia's advisory
<a href="http://secunia.com/advisories/14333/">SA14333</a>,
and has been assigned CVE ID
<a href="http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2005-0467">CVE-2005-0467</a>.
It has also been individually assigned
<a href="http://www.osvdb.org/14002">OSVDB ID 14002</a>.

<p>
<em>Vulnerability details:</em>
In response to an <code>FXP_READDIR</code> request, the server returns
a count of directory entries, followed by the entries themselves. In
<code>sftp.c:fxp_readdir_recv()</code>, this count was passed to
<code>snewn()</code> to allocate memory, where it was used as a
multiplier for an internal structure size. With a sufficiently large
count, an integer overflow could be provoked in <code>snewn()</code>,
such that insufficient memory could silently be <code>malloc()</code>'d.
<code>fxp:readdir_recv()</code> would then read server-supplied data
into this buffer, leading to a heap corruption with server-controlled
contents, and hence potentially to execution of arbitrary code.
