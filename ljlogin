#!/usr/bin/env python 

import urllib
import cookurl
import string
import os
import ljproto
import getpass
import htmllib
import formatter
import md5
import sys

def makedict(attrs):
    attrdict = {}
    for attr in attrs:
        attrdict[string.lower(attr[0])] = attr[1]
    return attrdict
class myparser(htmllib.HTMLParser):
    def __init__(self):
        htmllib.HTMLParser.__init__(self, formatter.NullFormatter())
        self.formdict = {}
        self.formurl = None
        self.recording = 0
    def start_form(self, attrs):
        a = makedict(attrs)
        # Amazingly, we can have multiple "class" attributes.
        if ("class", "lj_login_form") in attrs:
            self.recording = 1
            self.formurl = a["action"]
    def end_form(self):
        self.recording = 0
    def start_input(self, attrs):
        a = makedict(attrs)
        if self.recording:
            self.formdict[a.get("name")] = a.get("value", "")

# Get the login page.
f = cookurl.urlopen("http://www.livejournal.com/login.bml")
data = f.read()
f.close()

# Find the login form and fill it in.
p = myparser()
p.feed(data)
dict = p.formdict
dict["user"] = user = ljproto.ljusername()
dict["password"] = getpass.getpass("Password for LJ account \""+user+"\": ")
# Replicate the JavaScript challenge-response authentication, for
# greater security. (Well, perhaps. Actually I'm uncertain of how
# it protects against even a passive eavesdropper: even if they
# can't sniff your actual password, they can promptly sniff the
# login cookies LJ returns once you succeed!)
if dict.has_key("chal") and dict.has_key("response"):
    h1 = md5.new(dict["password"]).hexdigest()
    h2 = md5.new(dict["chal"] + h1).hexdigest()
    dict["response"] = h2
    dict["password"] = ""

# Submit the form and retrieve the results.
postdata = urllib.urlencode(dict)
f = cookurl.urlopen(p.formurl, postdata)
data = f.read()
f.read()
f.close()

if cookurl.cookiedb.has_key(("www.livejournal.com", "ljmastersession")):
    print "login succeeded"
else:
    print "login failed"
    sys.exit(1)

cfg = os.environ["HOME"] + "/.ljscan/ljsesscookies"
cookurl.savecookies(cfg)
